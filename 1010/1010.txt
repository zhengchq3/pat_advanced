基数
给定一对正整数，例如，6和110，等式6=110是真的吗？
如歌6是十进制，110是2进制，那么回答是正确。

现在又一对正整数N1和N2，给定一个数的基数，你的任务是找到另一个数的基数。

输入
每个输入文件包含一个测试用例。
每个用例占用一行，包含4个正整数：
N2 N2 tag radix
这里N1和N2每个都不超过10位。
每一位小于它的基数，并从集合{0-9,a-z}中取值，0-9代表十进制数字0-9，
a-z代表十进制数字10-35.
如果tag等于1，那么最后一个数字radix是N1的基数；如果tag等于2，那么tag是N2的基数。

输出
对于每个测试用例，在一行输出另一个数字的基数，使得等式N1=N2成立。
如果等式是不可能的，打印Impossible。
如果答案不唯一，输出最小的可能基数。



下界：两个测试点
是未知数所有位中最大的数字+1
比如89ac，下线是c+1，即12+1=13
下界必须要去求，不能从2开始，否则有几个测试点过不了。

溢出
long long溢出就是负数，返回-1

二分法防止超时

上限是max(num,lo)
有可能是1 1 1 10
1本身小于2（2进制是最小的）
对于这个例子，low=2,high=1,一开始就不会执行查找操作，导致第一个测试点不通过
hi的初始值应该是num和lo的最大值，保证算法可以至少执行一次。

lo也要设置成longlong，不能是int